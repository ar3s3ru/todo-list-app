// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: todolist/v1/todo_list_api.proto

package todolistv1connect

import (
	v1 "bitbucket.org/chronomics/todo-list-app/gen/todolist/v1"
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// TodoListServiceName is the fully-qualified name of the TodoListService service.
	TodoListServiceName = "todolist.v1.TodoListService"
)

// TodoListServiceClient is a client for the todolist.v1.TodoListService service.
type TodoListServiceClient interface {
	CreateTodoList(context.Context, *connect_go.Request[v1.CreateTodoListRequest]) (*connect_go.Response[v1.CreateTodoListResponse], error)
	GetTodoList(context.Context, *connect_go.Request[v1.GetTodoListRequest]) (*connect_go.Response[v1.GetTodoListResponse], error)
	AddTodoItem(context.Context, *connect_go.Request[v1.AddTodoItemRequest]) (*connect_go.Response[v1.AddTodoItemResponse], error)
	ToggleTodoItem(context.Context, *connect_go.Request[v1.ToggleTodoItemRequest]) (*connect_go.Response[v1.ToggleTodoItemResponse], error)
	DeleteTodoItem(context.Context, *connect_go.Request[v1.DeleteTodoItemRequest]) (*connect_go.Response[v1.DeleteTodoItemResponse], error)
}

// NewTodoListServiceClient constructs a client for the todolist.v1.TodoListService service. By
// default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses,
// and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewTodoListServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) TodoListServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &todoListServiceClient{
		createTodoList: connect_go.NewClient[v1.CreateTodoListRequest, v1.CreateTodoListResponse](
			httpClient,
			baseURL+"/todolist.v1.TodoListService/CreateTodoList",
			opts...,
		),
		getTodoList: connect_go.NewClient[v1.GetTodoListRequest, v1.GetTodoListResponse](
			httpClient,
			baseURL+"/todolist.v1.TodoListService/GetTodoList",
			opts...,
		),
		addTodoItem: connect_go.NewClient[v1.AddTodoItemRequest, v1.AddTodoItemResponse](
			httpClient,
			baseURL+"/todolist.v1.TodoListService/AddTodoItem",
			opts...,
		),
		toggleTodoItem: connect_go.NewClient[v1.ToggleTodoItemRequest, v1.ToggleTodoItemResponse](
			httpClient,
			baseURL+"/todolist.v1.TodoListService/ToggleTodoItem",
			opts...,
		),
		deleteTodoItem: connect_go.NewClient[v1.DeleteTodoItemRequest, v1.DeleteTodoItemResponse](
			httpClient,
			baseURL+"/todolist.v1.TodoListService/DeleteTodoItem",
			opts...,
		),
	}
}

// todoListServiceClient implements TodoListServiceClient.
type todoListServiceClient struct {
	createTodoList *connect_go.Client[v1.CreateTodoListRequest, v1.CreateTodoListResponse]
	getTodoList    *connect_go.Client[v1.GetTodoListRequest, v1.GetTodoListResponse]
	addTodoItem    *connect_go.Client[v1.AddTodoItemRequest, v1.AddTodoItemResponse]
	toggleTodoItem *connect_go.Client[v1.ToggleTodoItemRequest, v1.ToggleTodoItemResponse]
	deleteTodoItem *connect_go.Client[v1.DeleteTodoItemRequest, v1.DeleteTodoItemResponse]
}

// CreateTodoList calls todolist.v1.TodoListService.CreateTodoList.
func (c *todoListServiceClient) CreateTodoList(ctx context.Context, req *connect_go.Request[v1.CreateTodoListRequest]) (*connect_go.Response[v1.CreateTodoListResponse], error) {
	return c.createTodoList.CallUnary(ctx, req)
}

// GetTodoList calls todolist.v1.TodoListService.GetTodoList.
func (c *todoListServiceClient) GetTodoList(ctx context.Context, req *connect_go.Request[v1.GetTodoListRequest]) (*connect_go.Response[v1.GetTodoListResponse], error) {
	return c.getTodoList.CallUnary(ctx, req)
}

// AddTodoItem calls todolist.v1.TodoListService.AddTodoItem.
func (c *todoListServiceClient) AddTodoItem(ctx context.Context, req *connect_go.Request[v1.AddTodoItemRequest]) (*connect_go.Response[v1.AddTodoItemResponse], error) {
	return c.addTodoItem.CallUnary(ctx, req)
}

// ToggleTodoItem calls todolist.v1.TodoListService.ToggleTodoItem.
func (c *todoListServiceClient) ToggleTodoItem(ctx context.Context, req *connect_go.Request[v1.ToggleTodoItemRequest]) (*connect_go.Response[v1.ToggleTodoItemResponse], error) {
	return c.toggleTodoItem.CallUnary(ctx, req)
}

// DeleteTodoItem calls todolist.v1.TodoListService.DeleteTodoItem.
func (c *todoListServiceClient) DeleteTodoItem(ctx context.Context, req *connect_go.Request[v1.DeleteTodoItemRequest]) (*connect_go.Response[v1.DeleteTodoItemResponse], error) {
	return c.deleteTodoItem.CallUnary(ctx, req)
}

// TodoListServiceHandler is an implementation of the todolist.v1.TodoListService service.
type TodoListServiceHandler interface {
	CreateTodoList(context.Context, *connect_go.Request[v1.CreateTodoListRequest]) (*connect_go.Response[v1.CreateTodoListResponse], error)
	GetTodoList(context.Context, *connect_go.Request[v1.GetTodoListRequest]) (*connect_go.Response[v1.GetTodoListResponse], error)
	AddTodoItem(context.Context, *connect_go.Request[v1.AddTodoItemRequest]) (*connect_go.Response[v1.AddTodoItemResponse], error)
	ToggleTodoItem(context.Context, *connect_go.Request[v1.ToggleTodoItemRequest]) (*connect_go.Response[v1.ToggleTodoItemResponse], error)
	DeleteTodoItem(context.Context, *connect_go.Request[v1.DeleteTodoItemRequest]) (*connect_go.Response[v1.DeleteTodoItemResponse], error)
}

// NewTodoListServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewTodoListServiceHandler(svc TodoListServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	mux := http.NewServeMux()
	mux.Handle("/todolist.v1.TodoListService/CreateTodoList", connect_go.NewUnaryHandler(
		"/todolist.v1.TodoListService/CreateTodoList",
		svc.CreateTodoList,
		opts...,
	))
	mux.Handle("/todolist.v1.TodoListService/GetTodoList", connect_go.NewUnaryHandler(
		"/todolist.v1.TodoListService/GetTodoList",
		svc.GetTodoList,
		opts...,
	))
	mux.Handle("/todolist.v1.TodoListService/AddTodoItem", connect_go.NewUnaryHandler(
		"/todolist.v1.TodoListService/AddTodoItem",
		svc.AddTodoItem,
		opts...,
	))
	mux.Handle("/todolist.v1.TodoListService/ToggleTodoItem", connect_go.NewUnaryHandler(
		"/todolist.v1.TodoListService/ToggleTodoItem",
		svc.ToggleTodoItem,
		opts...,
	))
	mux.Handle("/todolist.v1.TodoListService/DeleteTodoItem", connect_go.NewUnaryHandler(
		"/todolist.v1.TodoListService/DeleteTodoItem",
		svc.DeleteTodoItem,
		opts...,
	))
	return "/todolist.v1.TodoListService/", mux
}

// UnimplementedTodoListServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedTodoListServiceHandler struct{}

func (UnimplementedTodoListServiceHandler) CreateTodoList(context.Context, *connect_go.Request[v1.CreateTodoListRequest]) (*connect_go.Response[v1.CreateTodoListResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("todolist.v1.TodoListService.CreateTodoList is not implemented"))
}

func (UnimplementedTodoListServiceHandler) GetTodoList(context.Context, *connect_go.Request[v1.GetTodoListRequest]) (*connect_go.Response[v1.GetTodoListResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("todolist.v1.TodoListService.GetTodoList is not implemented"))
}

func (UnimplementedTodoListServiceHandler) AddTodoItem(context.Context, *connect_go.Request[v1.AddTodoItemRequest]) (*connect_go.Response[v1.AddTodoItemResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("todolist.v1.TodoListService.AddTodoItem is not implemented"))
}

func (UnimplementedTodoListServiceHandler) ToggleTodoItem(context.Context, *connect_go.Request[v1.ToggleTodoItemRequest]) (*connect_go.Response[v1.ToggleTodoItemResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("todolist.v1.TodoListService.ToggleTodoItem is not implemented"))
}

func (UnimplementedTodoListServiceHandler) DeleteTodoItem(context.Context, *connect_go.Request[v1.DeleteTodoItemRequest]) (*connect_go.Response[v1.DeleteTodoItemResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("todolist.v1.TodoListService.DeleteTodoItem is not implemented"))
}
